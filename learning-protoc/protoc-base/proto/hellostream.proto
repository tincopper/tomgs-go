/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

// 将 gRPC-Gateway 批注添加到现有的 proto 文件中
import "google/api/annotations.proto";
//import "endpoint.proto";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";
option go_package = "apptest/teststream;apptest";
//option (service.endpoint) = "0.0.0.0:8080";

package stream;

// The greeting service definition.
service StreamGreeter {
  // Sends a greeting
  rpc ResponseStream (StreamRequest) returns (stream StreamReply) {
    option (google.api.http) = {
      post: "/v2/example/echo1"
      body: "*"
    };
  }

  // Sends a greeting
  rpc ClientStream (stream StreamRequest) returns (StreamReply) {
    option (google.api.http) = {
      post: "/v2/example/echo2"
      body: "*"
    };
  }

  // 双向流
  rpc BidirectionalStream (stream StreamRequest) returns (stream StreamReply) {
    option (google.api.http) = {
      post: "/v2/example/echo3"
      body: "*"
    };
  }

}

// The request message containing the user's name.
message StreamRequest {
  string name = 1;
}

// The response message containing the greetings
message StreamReply {
  string message = 1;
}
