package main

import (
    "fmt"
    "strings"

    //"flag"
    "google.golang.org/protobuf/compiler/protogen"
)

func main() {
    //var flags flag.FlagSet
    //font = flags.String("font", "doom", "font list available in github.com/common-nighthawk/go-figure")

    protogen.Options{
        //ParamFunc: flags.Set,
    }.Run(func(gen *protogen.Plugin) error {
        for _, f := range gen.Files {
            if !f.Generate {
                continue
            }
            generateFile(gen, f)
        }
        return nil
    })
}

// generateFile generates a _ascii.pb.go file containing gRPC service definitions.
func generateFile(gen *protogen.Plugin, file *protogen.File) *protogen.GeneratedFile {
    filename := file.GeneratedFilenamePrefix + "_gwroute.pb.go"
    g := gen.NewGeneratedFile(filename, file.GoImportPath)
    g.P("// Code generated by protoc-gen-go-ascii. DO NOT EDIT.")
    g.P()
    g.P("package ", file.GoPackageName)
    g.P()
    var endpoint string
    for _, extension := range file.Extensions {
        if strings.EqualFold(extension.GoName, "endpoint") {
            g.P(fmt.Sprintf("//%s", extension))
            endpoint = extension.GoName
        }
    }
    generateImports(g)

    g.P("func init() {")
    for _, service := range file.Services {
        g.P(fmt.Sprintf("route.AddRoute(%sRouteDefinition)", service.GoName))
    }
    g.P("}\n")

    for _, service := range file.Services {
        serviceName := service.GoName
        g.P(fmt.Sprintf("func %sRouteDefinition(gwmux *runtime.ServeMux) {", serviceName))
        g.P(fmt.Sprintf("\troute.AddUnitRoute(\"%s\", gwmux, func(gwmux *runtime.ServeMux, conn *grpc.ClientConn) error {", endpoint))
        g.P(fmt.Sprintf("\t\treturn Register%sHandler(context.Background(), gwmux, conn)", serviceName))
        g.P("\t})")
        g.P("}")
    }

    /*for _, msg := range file.Messages {
        g.P("func (x *", msg.GoIdent, ") Ascii() string {")
        g.P("return `", fig.String(), "`")
        g.P("}")
    }*/

    return g
}

func generateImports(g *protogen.GeneratedFile) {
    // import (
    //    "context"
    //    "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
    //    "google.golang.org/grpc"
    //    "tomgs-go/learning-grpc-gateway/hello-world/route"
    //)
    g.P("import (")
    g.P(`"context"`)
    g.P(`"github.com/grpc-ecosystem/grpc-gateway/v2/runtime"`)
    g.P(`"google.golang.org/grpc"`)
    g.P(`"tomgs-go/learning-grpc-gateway/hello-world/route"`)
    g.P(` ) `)
}